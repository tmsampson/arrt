ARRT Profling Ideas:
  ✔ 1) Setup tracer once and store in job @done(20-02-03 22:05)
  ✔ 2) Pre-calculate all initial rays (including additional samples) @done(20-02-03 22:05)
  ☐ 3) Store raw colours in array then average final colour in tight loop
  ☐ 4) Perform all Vec3::copy_to_pixel operations in tight loop

ARRT Todo:
  ✔ Implement high-resolution timer + print key stats @done(19-08-05 19:18)
  ✔ Implement quality profiles @done(19-08-06 13:21)
  ✔ Make progress updates fire on a regular interval rather than per scanline @done(19-08-06 13:32)
  ✔ Quality presets should be stored in hash map rather than array @done(19-08-06 21:06)
  ✔ Use and pass around job structure to wrap all things which need passing to draw_scene @done(20-01-07 13:35)
  ☐ Brush up on reflection/refraction:
    ☐ Docs: https://www.scratchapixel.com/lessons/3d-basic-rendering/introduction-to-shading/reflection-refraction-fresnel
    ☐ Snippet: http://asawicki.info/news_1301_reflect_and_refract_functions.html
  ☐ Implement per pixel debugging (bounces, timer, material, hit info etc)
  ☐ Implement bounce heatmap
  ☐ Collect bounce stats
  ☐ Add "random" helpers
  ☐ Add winit window
  ☐ Load scene from file https://serde.rs/
  ☐ Different primitives
    ☐ Cube
    ☐ Shapes
    ☐ Signed distance fields?
  ☐ Scene spatial partitioning
  ☐ Materials
    ☐ Emissive (glowy)
    ☐ Volume texturing
    ☐ Implement ice/refraction
    ☐ Mirror
    ☐ Marble
    ☐ Granite
  ☐ Optimisations
    ☐ Multi-threading
    ☐ Pre-bake per-pixel sampling offsets
    ☐ Pre-bake random unit sphere sample points
  ☐ Post processing pipeline
    ☐ Fog
    ☐ Chromatic abberation
    ☐ Vignette
    ☐ Per-pixel motion blur
    ☐ Tone mapping
  ✔ Introduce MAX_BOUNCES (prevent stack overflow) @done(19-05-27 18:33)
  ✔ Add multiple spheres @done(19-05-27 17:23)
  ✔ Move all config variables into single structure @done(19-05-27 16:17)
  ✔ Fix hit distance checks @done(19-05-27 15:43)
  ✔ Add progress meter @done(19-05-27 15:42)
